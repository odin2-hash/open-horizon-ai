version: '3.8'

services:
  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3030:3030"  # Changed from 3000 to avoid conflicts
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_SUPABASE_URL=${SUPABASE_URL:-https://demo.supabase.co}
      - REACT_APP_SUPABASE_KEY=${SUPABASE_KEY:-demo-key}
      - PORT=3030
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - open-horizon-network
    depends_on:
      - backend

  # FastAPI Backend  
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"  # Changed from 8000 to avoid conflicts
    environment:
      - LLM_PROVIDER=openai
      - LLM_API_KEY=${LLM_API_KEY}
      - LLM_MODEL=gpt-4o-mini
      - LLM_BASE_URL=https://api.openai.com/v1
      - SUPABASE_URL=${SUPABASE_URL:-https://demo.supabase.co}
      - SUPABASE_KEY=${SUPABASE_KEY:-demo-key}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:-demo-service-key}
      - ERASMUS_PARTNER_DB_API_KEY=${ERASMUS_PARTNER_DB_API_KEY:-demo-partner-key}
      - SECRET_KEY=${SECRET_KEY:-development-secret-key-change-in-production}
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRATION_HOURS=24
      - APP_ENV=docker
      - DEBUG=false
      - LOG_LEVEL=INFO
      - MAX_RETRIES=3
      - TIMEOUT_SECONDS=30
      - DATABASE_POOL_SIZE=10
      - DATABASE_MAX_CONNECTIONS=20
      - ALLOWED_ORIGINS=http://localhost:3030,http://localhost:5173,http://localhost:8080
      - CORS_ALLOW_CREDENTIALS=true
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - open-horizon-network

  # Optional: Add nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - open-horizon-ai
    restart: unless-stopped
    networks:
      - open-horizon-network
    profiles:
      - with-nginx

  # Optional: Add PostgreSQL database (if not using Supabase)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=open_horizon_ai
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - open-horizon-network
    profiles:
      - with-postgres

volumes:
  postgres_data:

networks:
  open-horizon-network:
    driver: bridge